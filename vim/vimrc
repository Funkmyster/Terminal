set nocompatible               " be iMproved
filetype off                   " required!

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

" let Vundle manage Vundle
" required! 
Bundle 'gmarik/vundle'

" My Bundles here:
"
Bundle 'tpope/vim-fugitive'
Bundle 'tpope/vim-markdown'
Bundle 'nvie/vim-rst-tables'
Bundle 'vimoutliner/vimoutliner'
Bundle 'scrooloose/nerdtree'

Bundle 'Lokaltog/powerline'
Bundle 'scrooloose/syntastic'
Bundle 'kien/ctrlp.vim'
Bundle 'Funkmyster/vim-chef'

" ...

filetype plugin indent on     " required!
"
" Brief help
" :BundleList          - list configured bundles
" :BundleInstall(!)    - install(update) bundles
" :BundleSearch(!) foo - search(or refresh cache first) for foo
" :BundleClean(!)      - confirm(or auto-approve) removal of unused bundles
"
" see :h vundle for more details or wiki for FAQ
" NOTE: comments after Bundle command are not allowed..

set laststatus=2	"Always disp statusline"
if has("gui_running")
    colorscheme evening
    set rtp+=~/Libs/Terminal/vim/vim/bundle/powerline/powerline/bindings/vim
    set guioptions-=m  "remove menu bar
    set guioptions-=T  "remove toolbar
    set guioptions-=r  "remove right-hand scroll bar
else
    colorscheme default
    set titlestring=%t%(\ %M%)%(\ (%{expand(\"%:p:h\")})%)%(\ %a%)\ -\ %{v:servername}
    set showcmd		"Show (partial) command in status line"
    set statusline=%F%m%r%h%w\ [FILETYPE=%Y]\[LINE=%04l][%p%%]
endif


set smarttab
set autoindent
set smartindent

set tabstop=4
set shiftwidth=4
set expandtab


set hlsearch		"Highlight search results"
set incsearch		"Increment search as I type"
set ignorecase		""
set smartcase		"Don't ignore case if there's an uppercase in my search"


set nobackup		"Use Git instead..."
set nowritebackup
set noswapfile

set undoreload=0    "now use :edit to reset undo history for file"

syntax on		"turn on syntax highlighting


" for vimdiff
if &diff
	colorscheme evening
endif

" set wildmenu		"In help system"
autocmd BufRead,BufNewFile *.help set filetype=help
autocmd BufRead,BufNewFile *.tags set filetype=tags

autocmd BufRead,BufNewFile *.pde  set filetype=c		" for arduino
autocmd BufRead,BufNewFile *.html set filetype=htmldjango
autocmd BufRead,BufNewFile *.m    set filetype=mumps
autocmd BufRead,BufNewFile *.mxml set filetype=xml
autocmd BufRead,BufNewFile *.as   set filetype=javascript	" for ActionScript

" for vimoutliner
autocmd BufRead,BufNewFile *.otl colorscheme vo_dark
autocmd BufRead,BufNewFile *.otl set number!

" for vim-fugitive
autocmd BufReadPost fugitive://* set bufhidden=delete
autocmd BufReadPost fugitive://* set statusline=%<%f\ %h%m%r%{fugitive#statusline()}%=%-14.(%l,%c%V%)\ %P

" for php
autocmd BufRead,BufNewFile *.php noremap <C-l> :!php -l %<CR>

" for LaTex
autocmd BufRead,BufNewFile *.tex set filetype=tex
autocmd BufRead,BufNewFile *.tex TTarget pdf

" for screen
autocmd BufRead,BufNewFile *.screen set filetype=screen

" for python
autocmd BufRead,BufNewFile *.py noremap <C-l> :!clear ; pylint --errors-only %<CR>

"for javascript
autocmd BufRead,BufNewFile *.js noremap <C-l> :!clear ; /home/jsilva/bin/jslint --color --browser true --predef '$' %<CR>

"for opscode chef
autocmd BufRead,BufNewFile *.rb call Chef_Helper()
